@model SchoolManagementSystem.Models.ViewModels.PostingPeriodsViewModel

@{
    ViewBag.Title = "Edit";
}

<section class="content-header">
    <h1>
        Posting Periods
        <small>Edit</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
        <li><a href="#">PostingPeriods</a></li>
        <li class="active">Edit</li>
    </ol>
</section>
<section class="content">
    <div class="row">
        <div class="col-md-4">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Enter Posting Periods</h3>
                </div>
                @using (Html.BeginForm("Edit", "PostingPeriods", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="box-body">
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.PostingPeriod.Id)

                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Year, "Year:", htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownList("Year", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.PostingPeriod.PostingId, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.PeriodName, "Period Name:", htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownList("CalendarId", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.PostingPeriod.PostingId, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.PostingPeriod.PostingId, "Parameter Name:", htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownList("PostingId", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.PostingPeriod.PostingId, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.PostingPeriod.StartDate, "Start Date:", htmlAttributes: new { @class = "control-label" })
                                    @{var startDateString = SchoolManagementSystem.Assets.Utils.FormatDateAlone(Model.PostingPeriod.StartDate);}
                                    @Html.EditorFor(model => startDateString, new { htmlAttributes = new { @class = "form-control date-picker-edit", placeholder = "Start Date", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.PostingPeriod.StartDate, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.PostingPeriod.EndDate, "End Date", htmlAttributes: new { @class = "control-label" })
                                    @{var endDateString = SchoolManagementSystem.Assets.Utils.FormatDateAlone(Model.PostingPeriod.EndDate);}
                                    @Html.EditorFor(model => endDateString, new { htmlAttributes = new { @class = "form-control date-picker-edit", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.PostingPeriod.EndDate, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.PostingPeriod.Status, "Status", htmlAttributes: new { @class = "control-label" })
                                    @Html.EnumDropDownListFor(model => model.PostingPeriod.Status, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.PostingPeriod.Status, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="box-footer">
                        @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-info btn-flat pull-left" })
                        <input type="submit" value="Submit Details" class="btn btn-info btn-flat pull-right" />
                    </div>
                                            }

            </div>
        </div>
        <div class="col-md-8">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">View Posting Periods</h3>
                </div>

                <table class="table">
                    @{var headerMetadata = Model.PostingPeriods.FirstOrDefault();}
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => headerMetadata.Calendar.Year)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => headerMetadata.Calendar.PeriodName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => headerMetadata.Posting.Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => headerMetadata.StartDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => headerMetadata.EndDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => headerMetadata.Status)
                        </th>
                        <th></th>
                    </tr>

                    @foreach (var item in Model.PostingPeriods)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Calendar.Year)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Calendar.PeriodName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Posting.Name)
                            </td>
                            <td>
                                @SchoolManagementSystem.Assets.Utils.FormatDateAlone(item.StartDate)
                            </td>
                            <td>
                                @SchoolManagementSystem.Assets.Utils.FormatDateAlone(item.EndDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                            </td>
                        </tr>
                    }

                </table>
            </div>
        </div>

    </div>
</section>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
